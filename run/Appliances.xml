<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Appliances xmlns="http://github.com/camueller/SmartApplianceEnabler/v1.4">
    <Appliance id="F-00000001-000000000099-00">
        <ElectricVehicleCharger startChargingStateDetectionDelay="15">
            <EVModbusControl idref="wallbox" slaveAddress="180">
                <ModbusRead address="100" type="InputString">
                    <ModbusReadValue name="VehicleNotConnected" extractionRegex="(A)"/>
                    <ModbusReadValue name="VehicleConnected" extractionRegex="(B)"/>
                    <ModbusReadValue name="Charging" extractionRegex="(C|D)"/>
                    <ModbusReadValue name="Error" extractionRegex="(E|F)"/>
                </ModbusRead>
                <ModbusWrite address="400" type="Coil">
                    <ModbusWriteValue name="StartCharging" value="1"/>
                    <ModbusWriteValue name="StopCharging" value="0"/>
                </ModbusWrite>
                <ModbusWrite address="300" type="Holding">
                    <ModbusWriteValue name="ChargingCurrent" value="0"/>
                </ModbusWrite>
            </EVModbusControl>
            <!--EVHttpControl contentProtocol="json">
                <HttpRead url="http://192.168.1.1/status">
                    <HttpReadValue name="VehicleNotConnected" path="$.car" extractionRegex="(1)"/>
                    <HttpReadValue name="VehicleConnected" path="$.car" extractionRegex="(3|4)"/>
                    <HttpReadValue name="Charging" path="$.car" extractionRegex="(2)"/>
                    <HttpReadValue name="Error" path="$.err" extractionRegex="([^0])"/>
                </HttpRead>
                <HttpWrite url="http://192.168.1.1/mqtt?payload=">
                    <HttpWriteValue name="ChargingCurrent" value="amp={0}" method="GET"/>
                    <HttpWriteValue name="StartCharging" value="alw=1" method="GET"/>
                    <HttpWriteValue name="StopCharging" value="alw=0" method="GET"/>
                </HttpWrite>
            </EVHttpControl-->
        </ElectricVehicleCharger>
        <!--S0ElectricityMeter gpio="3" pinPullResistance="PULL_DOWN" impulsesPerKwh="1000"/-->
        <!--S0ElectricityMeterNetworked idref="pulsereceiver" impulsesPerKwh="1000"/-->
        <HttpElectricityMeter contentProtocol="json">
            <HttpRead url="http://192.168.178.48/power">
                <HttpReadValue name="Power" path="$.dps" factorToValue="0.123"/>
            </HttpRead>
            <HttpRead url="http://192.168.178.48/status">
                <HttpReadValue name="Energy" path="$.dws" factorToValue="0.0000027778"/>
            </HttpRead>
        </HttpElectricityMeter>
        <!--ModbusElectricityMeter idref="modbus" slaveAddress="1" pollInterval="10" measurementInterval="60">
            <ModbusRegisterRead address="0x000C" type="InputFloat">
                <ModbusRegisterReadValue name="Power"/>
            </ModbusRegisterRead>
            <ModbusRegisterRead address="0x0156" type="InputFloat">
                <ModbusRegisterReadValue name="Energy"/>
            </ModbusRegisterRead>
        </ModbusElectricityMeter-->
    </Appliance>
    <Connectivity>
        <PulseReceiver id="pulsereceiver" port="9999"/>
        <ModbusTCP id="modbus" host="127.0.0.1"/>
        <ModbusTCP id="wallbox" host="192.168.178.39"/>
    </Connectivity>
</Appliances>
